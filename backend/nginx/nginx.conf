worker_processes 1;
events { worker_connections 1024; }

http {
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  server {
    listen 80;
    # ─── Admin Console (on project service) ─────────────────
    location /api/admin/ {
      proxy_pass         http://project:8002;
      proxy_set_header   Host              $host;
      proxy_set_header   Authorization     $http_authorization;
      proxy_set_header   X-Real-IP         $remote_addr;
      proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
    }

    # ─── User Service ─────────────────────────────
    # FastAPI users.router is mounted at /api/users
    location /api/users/ {
      proxy_pass         http://user:8001;
      proxy_set_header   Host              $host;
      proxy_set_header   Authorization     $http_authorization;
      proxy_set_header   X-Real-IP         $remote_addr;
      proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
    }

    # ─── Project Service ──────────────────────────
    # FastAPI projects.router is mounted at /api/projects
    location /api/projects/ {
      proxy_pass         http://project:8002;
      proxy_set_header   Host              $host;
      proxy_set_header   Authorization     $http_authorization;
      proxy_set_header   X-Real-IP         $remote_addr;
      proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
    }

    # ─── Analytics Service ────────────────────────
    # FastAPI dashboard.router is mounted at /api/analytics/dashboard
    #  & summary_router at /api/analytics/projects :contentReference[oaicite:0]{index=0}:contentReference[oaicite:1]{index=1}
    location /api/analytics/ {
      proxy_pass         http://analytics:8003;
      proxy_set_header   Host              $host;
      proxy_set_header   Authorization     $http_authorization;
      proxy_set_header   X-Real-IP         $remote_addr;
      proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
    }

    # ─── Notification Service ─────────────────────
    # notification.router has no prefix, so it answers /api/notifications/... :contentReference[oaicite:2]{index=2}:contentReference[oaicite:3]{index=3}
    location /api/notifications/ {
      proxy_pass         http://notification:8004;
      proxy_set_header   Host              $host;
      proxy_set_header   Authorization     $http_authorization;
      proxy_set_header   X-Real-IP         $remote_addr;
      proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
    }

    # ─── AI Service ───────────────────────────────
    # ai_router is mounted at /ai, so we strip /api prefix and preserve /ai :contentReference[oaicite:4]{index=4}:contentReference[oaicite:5]{index=5}
    location /api/ai/ {
      proxy_pass         http://ai:8006;
      proxy_set_header   Host              $host;
      proxy_set_header   Authorization     $http_authorization;
      proxy_set_header   X-Real-IP         $remote_addr;
      proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
    }

    # ─── Scheduler Service ───────────────────────
    # If you ever expose HTTP endpoints under /api/scheduler/
    location /api/scheduler/ {
      proxy_pass         http://scheduler:8005;
      proxy_set_header   Host              $host;
      proxy_set_header   Authorization     $http_authorization;
      proxy_set_header   X-Real-IP         $remote_addr;
      proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
    }

    # ─── WebSockets (realtime-gateway) ────────────
    location /ws {
      proxy_pass         http://realtime-gateway:9000;
      proxy_http_version 1.1;
      proxy_set_header   Upgrade           $http_upgrade;
      proxy_set_header   Connection        $connection_upgrade;
      proxy_set_header   Host              $host;
      proxy_read_timeout 600s;
      proxy_send_timeout 600s;
    }

    # ─── Fallback: any other /api/ path ───────────
    location /api/ {
      return 404;
    }

    # ─── Front-end static files ────────────────────
    location / {
      root       /usr/share/nginx/html;
      try_files  $uri /index.html;
    }
  }
}
